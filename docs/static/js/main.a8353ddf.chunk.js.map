{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,4CACA,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OADAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAEvB,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCHGS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IACGuB,EDfyBK,CAAa5B,GAAjCa,EAFyB,EAE/BN,KAAce,EAFiB,EAEjBA,QAKtB,OAJAN,QAAQC,IAAIK,GAKV,oCACE,4BAAKtB,GAEHsB,GAAW,sCAEb,yBAAKJ,UAAU,kBAEXL,EAAOJ,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eACEmB,IAAKnB,EAAIC,IACLD,UEDHoB,EAjBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,cADrB,mBAClB6C,EADkB,KACN9C,EADM,KAGzB,OACE,oCACE,4CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAeA,IAE3B8C,EAAWtB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,SCV1CgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.a8353ddf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setcategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Category</h2>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setcategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=LAyV5e224aPWu20Iq55Wqjba5y4JDsyV`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n    return gifs\r\n};","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  console.log({ id, title, url });\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  console.log(loading)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {\r\n        loading && <p>Loading</p>\r\n      }\r\n      <div className='card-container'>\r\n        {\r\n          images.map((img) => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                console.log(imgs)\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n\r\n            })\r\n    }, [category])\r\n    return state //{ data:[], loadin: true}\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setcategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <hr />\r\n\r\n      <AddCategory setcategories={setcategories} />\r\n\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}